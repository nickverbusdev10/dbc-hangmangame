{
 "metadata": {
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.1"
  },
  "orig_nbformat": 4,
  "kernelspec": {
   "name": "python3",
   "display_name": "Python 3.9.1 64-bit ('base': conda)"
  },
  "interpreter": {
   "hash": "a5b7aeff42ba6761a280498ade45e749cf5f5c1a448f52619a139fff18264354"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2,
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "output_type": "stream",
     "name": "stdout",
     "text": [
      "Welcome to the word guessing game!\n",
      "This program will select a random word and you will have to guess it.\n",
      "\n",
      "You have six wrong attempts to select every letter or the whole word.\n",
      "\n",
      "\n",
      "Unfortunately, this guess is incorrect.\n",
      "\n",
      "                     \n",
      "                     \n",
      "UUUUUUUU     UUUUUUUU\n",
      "U::::::U     U::::::U\n",
      "U::::::U     U::::::U\n",
      "UU:::::U     U:::::UU\n",
      " U:::::U     U:::::U \n",
      " U:::::D     D:::::U \n",
      " U:::::D     D:::::U \n",
      " U:::::D     D:::::U \n",
      " U:::::D     D:::::U \n",
      " U:::::D     D:::::U \n",
      " U:::::D     D:::::U \n",
      " U::::::U   U::::::U \n",
      " U:::::::UUU:::::::U \n",
      "  UU:::::::::::::UU  \n",
      "    UU:::::::::UU    \n",
      "      UUUUUUUUU      \n",
      "                     \n",
      "                     \n",
      "                     \n",
      "                     \n",
      "                     \n",
      "                     \n",
      "                     \n",
      "\n",
      "\n",
      "\n",
      "You have 5 lives remaining.\n",
      "\n",
      "This is how your word looks now.\n",
      "\n",
      "_ , _ , _ , _\n",
      "\n",
      "These are the letters available to guess\n",
      "\n",
      "a , b , c , d , e , f , g , h , i , j , k , l , m , n , o , p , q , _ , s , t , u , v , w , x , y , z\n",
      "\n",
      "\n",
      "\n",
      "Unfortunately, this guess is incorrect.\n",
      "\n",
      "                     \n",
      "                     \n",
      "UUUUUUUU     UUUUUUUU\n",
      "U::::::U     U::::::U\n",
      "U::::::U     U::::::U\n",
      "UU:::::U     U:::::UU\n",
      " U:::::U     U:::::U \n",
      " U:::::D     D:::::U \n",
      " U:::::D     D:::::U \n",
      " U:::::D     D:::::U \n",
      " U:::::D     D:::::U \n",
      " U:::::D     D:::::U \n",
      " U:::::D     D:::::U \n",
      " U::::::U   U::::::U \n",
      " U:::::::UUU:::::::U \n",
      "  UU:::::::::::::UU  \n",
      "    UU:::::::::UU    \n",
      "      UUUUUUUUU      \n",
      "                     \n",
      "                     \n",
      "                     \n",
      "                     \n",
      "                     \n",
      "                     \n",
      "                     \n",
      "\n",
      "\n",
      "\n",
      "                    \n",
      "                    \n",
      "RRRRRRRRRRRRRRRRR   \n",
      "R::::::::::::::::R  \n",
      "R::::::RRRRRR:::::R \n",
      "RR:::::R     R:::::R\n",
      "  R::::R     R:::::R\n",
      "  R::::R     R:::::R\n",
      "  R::::RRRRRR:::::R \n",
      "  R:::::::::::::RR  \n",
      "  R::::RRRRRR:::::R \n",
      "  R::::R     R:::::R\n",
      "  R::::R     R:::::R\n",
      "  R::::R     R:::::R\n",
      "RR:::::R     R:::::R\n",
      "R::::::R     R:::::R\n",
      "R::::::R     R:::::R\n",
      "RRRRRRRR     RRRRRRR\n",
      "                    \n",
      "                    \n",
      "                    \n",
      "                    \n",
      "                    \n",
      "                    \n",
      "                    \n",
      "\n",
      "\n",
      "\n",
      "You have 4 lives remaining.\n",
      "\n",
      "This is how your word looks now.\n",
      "\n",
      "_ , _ , _ , _\n",
      "\n",
      "These are the letters available to guess\n",
      "\n",
      "a , b , c , d , e , f , g , h , i , j , k , l , m , n , o , p , q , _ , _ , t , u , v , w , x , y , z\n",
      "\n",
      "\n",
      "\n",
      "Congratulations, the letter t is in the word\n",
      "\n",
      "You have 4 lives remaining.\n",
      "\n",
      "This is how your word looks now.\n",
      "\n",
      "t , _ , _ , _\n",
      "\n",
      "These are the letters available to guess\n",
      "\n",
      "a , b , c , d , e , f , g , h , i , j , k , l , m , n , o , p , q , _ , _ , _ , u , v , w , x , y , z\n",
      "\n",
      "\n",
      "\n",
      "Unfortunately, this guess is incorrect.\n",
      "\n",
      "                     \n",
      "                     \n",
      "UUUUUUUU     UUUUUUUU\n",
      "U::::::U     U::::::U\n",
      "U::::::U     U::::::U\n",
      "UU:::::U     U:::::UU\n",
      " U:::::U     U:::::U \n",
      " U:::::D     D:::::U \n",
      " U:::::D     D:::::U \n",
      " U:::::D     D:::::U \n",
      " U:::::D     D:::::U \n",
      " U:::::D     D:::::U \n",
      " U:::::D     D:::::U \n",
      " U::::::U   U::::::U \n",
      " U:::::::UUU:::::::U \n",
      "  UU:::::::::::::UU  \n",
      "    UU:::::::::UU    \n",
      "      UUUUUUUUU      \n",
      "                     \n",
      "                     \n",
      "                     \n",
      "                     \n",
      "                     \n",
      "                     \n",
      "                     \n",
      "\n",
      "\n",
      "\n",
      "                    \n",
      "                    \n",
      "RRRRRRRRRRRRRRRRR   \n",
      "R::::::::::::::::R  \n",
      "R::::::RRRRRR:::::R \n",
      "RR:::::R     R:::::R\n",
      "  R::::R     R:::::R\n",
      "  R::::R     R:::::R\n",
      "  R::::RRRRRR:::::R \n",
      "  R:::::::::::::RR  \n",
      "  R::::RRRRRR:::::R \n",
      "  R::::R     R:::::R\n",
      "  R::::R     R:::::R\n",
      "  R::::R     R:::::R\n",
      "RR:::::R     R:::::R\n",
      "R::::::R     R:::::R\n",
      "R::::::R     R:::::R\n",
      "RRRRRRRR     RRRRRRR\n",
      "                    \n",
      "                    \n",
      "                    \n",
      "                    \n",
      "                    \n",
      "                    \n",
      "                    \n",
      "\n",
      "\n",
      "\n",
      "                     \n",
      "                     \n",
      "DDDDDDDDDDDDD        \n",
      "D::::::::::::DDD     \n",
      "D:::::::::::::::DD   \n",
      "DDD:::::DDDDD:::::D  \n",
      "  D:::::D    D:::::D \n",
      "  D:::::D     D:::::D\n",
      "  D:::::D     D:::::D\n",
      "  D:::::D     D:::::D\n",
      "  D:::::D     D:::::D\n",
      "  D:::::D     D:::::D\n",
      "  D:::::D     D:::::D\n",
      "  D:::::D    D:::::D \n",
      "DDD:::::DDDDD:::::D  \n",
      "D:::::::::::::::DD   \n",
      "D::::::::::::DDD     \n",
      "DDDDDDDDDDDDD        \n",
      "                     \n",
      "                     \n",
      "                     \n",
      "                     \n",
      "                     \n",
      "                     \n",
      "                     \n",
      "\n",
      "\n",
      "\n",
      "You have 3 lives remaining.\n",
      "\n",
      "This is how your word looks now.\n",
      "\n",
      "t , _ , _ , _\n",
      "\n",
      "These are the letters available to guess\n",
      "\n",
      "_ , b , c , d , e , f , g , h , i , j , k , l , m , n , o , p , q , _ , _ , _ , u , v , w , x , y , z\n",
      "\n",
      "\n",
      "\n",
      "Congratulations, the letter o is in the word\n",
      "\n",
      "You have 3 lives remaining.\n",
      "\n",
      "This is how your word looks now.\n",
      "\n",
      "t , o , _ , _\n",
      "\n",
      "These are the letters available to guess\n",
      "\n",
      "_ , b , c , d , e , f , g , h , i , j , k , l , m , n , _ , p , q , _ , _ , _ , u , v , w , x , y , z\n",
      "\n",
      "\n",
      "\n",
      "Unfortunately, this guess is incorrect.\n",
      "\n",
      "                     \n",
      "                     \n",
      "UUUUUUUU     UUUUUUUU\n",
      "U::::::U     U::::::U\n",
      "U::::::U     U::::::U\n",
      "UU:::::U     U:::::UU\n",
      " U:::::U     U:::::U \n",
      " U:::::D     D:::::U \n",
      " U:::::D     D:::::U \n",
      " U:::::D     D:::::U \n",
      " U:::::D     D:::::U \n",
      " U:::::D     D:::::U \n",
      " U:::::D     D:::::U \n",
      " U::::::U   U::::::U \n",
      " U:::::::UUU:::::::U \n",
      "  UU:::::::::::::UU  \n",
      "    UU:::::::::UU    \n",
      "      UUUUUUUUU      \n",
      "                     \n",
      "                     \n",
      "                     \n",
      "                     \n",
      "                     \n",
      "                     \n",
      "                     \n",
      "\n",
      "\n",
      "\n",
      "                    \n",
      "                    \n",
      "RRRRRRRRRRRRRRRRR   \n",
      "R::::::::::::::::R  \n",
      "R::::::RRRRRR:::::R \n",
      "RR:::::R     R:::::R\n",
      "  R::::R     R:::::R\n",
      "  R::::R     R:::::R\n",
      "  R::::RRRRRR:::::R \n",
      "  R:::::::::::::RR  \n",
      "  R::::RRRRRR:::::R \n",
      "  R::::R     R:::::R\n",
      "  R::::R     R:::::R\n",
      "  R::::R     R:::::R\n",
      "RR:::::R     R:::::R\n",
      "R::::::R     R:::::R\n",
      "R::::::R     R:::::R\n",
      "RRRRRRRR     RRRRRRR\n",
      "                    \n",
      "                    \n",
      "                    \n",
      "                    \n",
      "                    \n",
      "                    \n",
      "                    \n",
      "\n",
      "\n",
      "\n",
      "                     \n",
      "                     \n",
      "DDDDDDDDDDDDD        \n",
      "D::::::::::::DDD     \n",
      "D:::::::::::::::DD   \n",
      "DDD:::::DDDDD:::::D  \n",
      "  D:::::D    D:::::D \n",
      "  D:::::D     D:::::D\n",
      "  D:::::D     D:::::D\n",
      "  D:::::D     D:::::D\n",
      "  D:::::D     D:::::D\n",
      "  D:::::D     D:::::D\n",
      "  D:::::D     D:::::D\n",
      "  D:::::D    D:::::D \n",
      "DDD:::::DDDDD:::::D  \n",
      "D:::::::::::::::DD   \n",
      "D::::::::::::DDD     \n",
      "DDDDDDDDDDDDD        \n",
      "                     \n",
      "                     \n",
      "                     \n",
      "                     \n",
      "                     \n",
      "                     \n",
      "                     \n",
      "\n",
      "\n",
      "\n",
      "                      \n",
      "                      \n",
      "EEEEEEEEEEEEEEEEEEEEEE\n",
      "E::::::::::::::::::::E\n",
      "E::::::::::::::::::::E\n",
      "EE::::::EEEEEEEEE::::E\n",
      "  E:::::E       EEEEEE\n",
      "  E:::::E             \n",
      "  E::::::EEEEEEEEEE   \n",
      "  E:::::::::::::::E   \n",
      "  E:::::::::::::::E   \n",
      "  E::::::EEEEEEEEEE   \n",
      "  E:::::E             \n",
      "  E:::::E       EEEEEE\n",
      "EE::::::EEEEEEEE:::::E\n",
      "E::::::::::::::::::::E\n",
      "E::::::::::::::::::::E\n",
      "EEEEEEEEEEEEEEEEEEEEEE\n",
      "                      \n",
      "                      \n",
      "                      \n",
      "                      \n",
      "                      \n",
      "                      \n",
      "                      \n",
      "\n",
      "\n",
      "\n",
      "You have 2 lives remaining.\n",
      "\n",
      "This is how your word looks now.\n",
      "\n",
      "t , o , _ , _\n",
      "\n",
      "These are the letters available to guess\n",
      "\n",
      "_ , b , c , d , e , f , g , h , i , j , k , _ , m , n , _ , p , q , _ , _ , _ , u , v , w , x , y , z\n",
      "\n",
      "\n",
      "\n",
      "Unfortunately, this guess is incorrect.\n",
      "\n",
      "                     \n",
      "                     \n",
      "UUUUUUUU     UUUUUUUU\n",
      "U::::::U     U::::::U\n",
      "U::::::U     U::::::U\n",
      "UU:::::U     U:::::UU\n",
      " U:::::U     U:::::U \n",
      " U:::::D     D:::::U \n",
      " U:::::D     D:::::U \n",
      " U:::::D     D:::::U \n",
      " U:::::D     D:::::U \n",
      " U:::::D     D:::::U \n",
      " U:::::D     D:::::U \n",
      " U::::::U   U::::::U \n",
      " U:::::::UUU:::::::U \n",
      "  UU:::::::::::::UU  \n",
      "    UU:::::::::UU    \n",
      "      UUUUUUUUU      \n",
      "                     \n",
      "                     \n",
      "                     \n",
      "                     \n",
      "                     \n",
      "                     \n",
      "                     \n",
      "\n",
      "\n",
      "\n",
      "                    \n",
      "                    \n",
      "RRRRRRRRRRRRRRRRR   \n",
      "R::::::::::::::::R  \n",
      "R::::::RRRRRR:::::R \n",
      "RR:::::R     R:::::R\n",
      "  R::::R     R:::::R\n",
      "  R::::R     R:::::R\n",
      "  R::::RRRRRR:::::R \n",
      "  R:::::::::::::RR  \n",
      "  R::::RRRRRR:::::R \n",
      "  R::::R     R:::::R\n",
      "  R::::R     R:::::R\n",
      "  R::::R     R:::::R\n",
      "RR:::::R     R:::::R\n",
      "R::::::R     R:::::R\n",
      "R::::::R     R:::::R\n",
      "RRRRRRRR     RRRRRRR\n",
      "                    \n",
      "                    \n",
      "                    \n",
      "                    \n",
      "                    \n",
      "                    \n",
      "                    \n",
      "\n",
      "\n",
      "\n",
      "                     \n",
      "                     \n",
      "DDDDDDDDDDDDD        \n",
      "D::::::::::::DDD     \n",
      "D:::::::::::::::DD   \n",
      "DDD:::::DDDDD:::::D  \n",
      "  D:::::D    D:::::D \n",
      "  D:::::D     D:::::D\n",
      "  D:::::D     D:::::D\n",
      "  D:::::D     D:::::D\n",
      "  D:::::D     D:::::D\n",
      "  D:::::D     D:::::D\n",
      "  D:::::D     D:::::D\n",
      "  D:::::D    D:::::D \n",
      "DDD:::::DDDDD:::::D  \n",
      "D:::::::::::::::DD   \n",
      "D::::::::::::DDD     \n",
      "DDDDDDDDDDDDD        \n",
      "                     \n",
      "                     \n",
      "                     \n",
      "                     \n",
      "                     \n",
      "                     \n",
      "                     \n",
      "\n",
      "\n",
      "\n",
      "                      \n",
      "                      \n",
      "EEEEEEEEEEEEEEEEEEEEEE\n",
      "E::::::::::::::::::::E\n",
      "E::::::::::::::::::::E\n",
      "EE::::::EEEEEEEEE::::E\n",
      "  E:::::E       EEEEEE\n",
      "  E:::::E             \n",
      "  E::::::EEEEEEEEEE   \n",
      "  E:::::::::::::::E   \n",
      "  E:::::::::::::::E   \n",
      "  E::::::EEEEEEEEEE   \n",
      "  E:::::E             \n",
      "  E:::::E       EEEEEE\n",
      "EE::::::EEEEEEEE:::::E\n",
      "E::::::::::::::::::::E\n",
      "E::::::::::::::::::::E\n",
      "EEEEEEEEEEEEEEEEEEEEEE\n",
      "                      \n",
      "                      \n",
      "                      \n",
      "                      \n",
      "                      \n",
      "                      \n",
      "                      \n",
      "\n",
      "\n",
      "\n",
      "                                 \n",
      "                                 \n",
      "               AAA               \n",
      "              A:::A              \n",
      "             A:::::A             \n",
      "            A:::::::A            \n",
      "           A:::::::::A           \n",
      "          A:::::A:::::A          \n",
      "         A:::::A A:::::A         \n",
      "        A:::::A   A:::::A        \n",
      "       A:::::A     A:::::A       \n",
      "      A:::::AAAAAAAAA:::::A      \n",
      "     A:::::::::::::::::::::A     \n",
      "    A:::::AAAAAAAAAAAAA:::::A    \n",
      "   A:::::A             A:::::A   \n",
      "  A:::::A               A:::::A  \n",
      " A:::::A                 A:::::A \n",
      "AAAAAAA                   AAAAAAA\n",
      "                                 \n",
      "                                 \n",
      "                                 \n",
      "                                 \n",
      "                                 \n",
      "                                 \n",
      "                                 \n",
      "\n",
      "\n",
      "\n",
      "You have 1 lives remaining.\n",
      "\n",
      "This is how your word looks now.\n",
      "\n",
      "t , o , _ , _\n",
      "\n",
      "These are the letters available to guess\n",
      "\n",
      "_ , b , c , d , _ , f , g , h , i , j , k , _ , m , n , _ , p , q , _ , _ , _ , u , v , w , x , y , z\n",
      "\n",
      "\n",
      "\n",
      "Unfortunately, this guess is incorrect.\n",
      "\n",
      "                     \n",
      "                     \n",
      "UUUUUUUU     UUUUUUUU\n",
      "U::::::U     U::::::U\n",
      "U::::::U     U::::::U\n",
      "UU:::::U     U:::::UU\n",
      " U:::::U     U:::::U \n",
      " U:::::D     D:::::U \n",
      " U:::::D     D:::::U \n",
      " U:::::D     D:::::U \n",
      " U:::::D     D:::::U \n",
      " U:::::D     D:::::U \n",
      " U:::::D     D:::::U \n",
      " U::::::U   U::::::U \n",
      " U:::::::UUU:::::::U \n",
      "  UU:::::::::::::UU  \n",
      "    UU:::::::::UU    \n",
      "      UUUUUUUUU      \n",
      "                     \n",
      "                     \n",
      "                     \n",
      "                     \n",
      "                     \n",
      "                     \n",
      "                     \n",
      "\n",
      "\n",
      "\n",
      "                    \n",
      "                    \n",
      "RRRRRRRRRRRRRRRRR   \n",
      "R::::::::::::::::R  \n",
      "R::::::RRRRRR:::::R \n",
      "RR:::::R     R:::::R\n",
      "  R::::R     R:::::R\n",
      "  R::::R     R:::::R\n",
      "  R::::RRRRRR:::::R \n",
      "  R:::::::::::::RR  \n",
      "  R::::RRRRRR:::::R \n",
      "  R::::R     R:::::R\n",
      "  R::::R     R:::::R\n",
      "  R::::R     R:::::R\n",
      "RR:::::R     R:::::R\n",
      "R::::::R     R:::::R\n",
      "R::::::R     R:::::R\n",
      "RRRRRRRR     RRRRRRR\n",
      "                    \n",
      "                    \n",
      "                    \n",
      "                    \n",
      "                    \n",
      "                    \n",
      "                    \n",
      "\n",
      "\n",
      "\n",
      "                     \n",
      "                     \n",
      "DDDDDDDDDDDDD        \n",
      "D::::::::::::DDD     \n",
      "D:::::::::::::::DD   \n",
      "DDD:::::DDDDD:::::D  \n",
      "  D:::::D    D:::::D \n",
      "  D:::::D     D:::::D\n",
      "  D:::::D     D:::::D\n",
      "  D:::::D     D:::::D\n",
      "  D:::::D     D:::::D\n",
      "  D:::::D     D:::::D\n",
      "  D:::::D     D:::::D\n",
      "  D:::::D    D:::::D \n",
      "DDD:::::DDDDD:::::D  \n",
      "D:::::::::::::::DD   \n",
      "D::::::::::::DDD     \n",
      "DDDDDDDDDDDDD        \n",
      "                     \n",
      "                     \n",
      "                     \n",
      "                     \n",
      "                     \n",
      "                     \n",
      "                     \n",
      "\n",
      "\n",
      "\n",
      "                      \n",
      "                      \n",
      "EEEEEEEEEEEEEEEEEEEEEE\n",
      "E::::::::::::::::::::E\n",
      "E::::::::::::::::::::E\n",
      "EE::::::EEEEEEEEE::::E\n",
      "  E:::::E       EEEEEE\n",
      "  E:::::E             \n",
      "  E::::::EEEEEEEEEE   \n",
      "  E:::::::::::::::E   \n",
      "  E:::::::::::::::E   \n",
      "  E::::::EEEEEEEEEE   \n",
      "  E:::::E             \n",
      "  E:::::E       EEEEEE\n",
      "EE::::::EEEEEEEE:::::E\n",
      "E::::::::::::::::::::E\n",
      "E::::::::::::::::::::E\n",
      "EEEEEEEEEEEEEEEEEEEEEE\n",
      "                      \n",
      "                      \n",
      "                      \n",
      "                      \n",
      "                      \n",
      "                      \n",
      "                      \n",
      "\n",
      "\n",
      "\n",
      "                                 \n",
      "                                 \n",
      "               AAA               \n",
      "              A:::A              \n",
      "             A:::::A             \n",
      "            A:::::::A            \n",
      "           A:::::::::A           \n",
      "          A:::::A:::::A          \n",
      "         A:::::A A:::::A         \n",
      "        A:::::A   A:::::A        \n",
      "       A:::::A     A:::::A       \n",
      "      A:::::AAAAAAAAA:::::A      \n",
      "     A:::::::::::::::::::::A     \n",
      "    A:::::AAAAAAAAAAAAA:::::A    \n",
      "   A:::::A             A:::::A   \n",
      "  A:::::A               A:::::A  \n",
      " A:::::A                 A:::::A \n",
      "AAAAAAA                   AAAAAAA\n",
      "                                 \n",
      "                                 \n",
      "                                 \n",
      "                                 \n",
      "                                 \n",
      "                                 \n",
      "                                 \n",
      "\n",
      "\n",
      "\n",
      "                     \n",
      "                     \n",
      "DDDDDDDDDDDDD        \n",
      "D::::::::::::DDD     \n",
      "D:::::::::::::::DD   \n",
      "DDD:::::DDDDD:::::D  \n",
      "  D:::::D    D:::::D \n",
      "  D:::::D     D:::::D\n",
      "  D:::::D     D:::::D\n",
      "  D:::::D     D:::::D\n",
      "  D:::::D     D:::::D\n",
      "  D:::::D     D:::::D\n",
      "  D:::::D     D:::::D\n",
      "  D:::::D    D:::::D \n",
      "DDD:::::DDDDD:::::D  \n",
      "D:::::::::::::::DD   \n",
      "D::::::::::::DDD     \n",
      "DDDDDDDDDDDDD        \n",
      "                     \n",
      "                     \n",
      "                     \n",
      "                     \n",
      "                     \n",
      "                     \n",
      "                     \n",
      "\n",
      "\n",
      "\n",
      "You have failed. Your record is now 0 wins and 5 losses\n",
      "\n",
      "\n",
      "YOU LOSE\n",
      "\n",
      "\"tong\" was the word that you failed to guess\n",
      "\n"
     ]
    }
   ],
   "source": [
    "import json\n",
    "import random\n",
    "import pyfiglet as p\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "def Fill_Position_Bool (A_list,Bool_list):\n",
    "\n",
    "    length=len(A_list)\n",
    "\n",
    "    Bool_list= [None] * length\n",
    "\n",
    "    for i in range(length):\n",
    "\n",
    "        Bool_list[i] = False\n",
    "\n",
    "    return Bool_list\n",
    "\n",
    "\n",
    "\n",
    "def Rand_Word_Into_List (A_Word):\n",
    "\n",
    "    return [char for char in A_Word]\n",
    "\n",
    "\n",
    "\n",
    "def Letter_Check(A_list, Bool_list,input):\n",
    "\n",
    "    length = len(A_list)\n",
    "\n",
    "    for i in range(length):\n",
    "\n",
    "        if input == A_list[i]:\n",
    "\n",
    "            Bool_list[i] = True\n",
    "\n",
    "    return Bool_list\n",
    "\n",
    "    \n",
    "    \n",
    "#this needs work\n",
    "\n",
    "def Word_Check(A_Word, Guess):\n",
    "\n",
    "    Return_Value=False\n",
    "\n",
    "    if A_Word == Guess:\n",
    "\n",
    "      Return_Value = True\n",
    "\n",
    "    return Return_Value\n",
    "    \n",
    "\n",
    "       \n",
    "\n",
    "\n",
    "\n",
    "\n",
    "def Guess_Display (A_list, Bool_list, Show_List):\n",
    "\n",
    "    length = len(A_list)\n",
    "\n",
    "    for i in range(length):\n",
    "\n",
    "        if Bool_list[i] == True:\n",
    "\n",
    "            Show_List[i] = A_list[i]\n",
    "\n",
    "        else:\n",
    "\n",
    "            Show_List[i] = \"_\"\n",
    "\n",
    "    return Show_List\n",
    "\n",
    "\n",
    "\n",
    "def True_Counter_For_Letters(Bool_List):\n",
    "\n",
    "    length = len(Bool_List)\n",
    "\n",
    "    Number_Of_Trues=0\n",
    "\n",
    "    for i in range(length):\n",
    "\n",
    "        if Bool_List[i] == True:\n",
    "\n",
    "            Number_Of_Trues += 1\n",
    "\n",
    "    return Number_Of_Trues\n",
    "\n",
    "\n",
    "def Game_Restart():\n",
    "\n",
    "    Value_To_Return = False\n",
    "\n",
    "    answer = False\n",
    "\n",
    "    x = \"\"\n",
    "\n",
    "    while answer == False:\n",
    "\n",
    "        x = input(\"Would you like to play again? Y or N?\\n\")\n",
    "\n",
    "        if x == \"y\" or x == \"Y\" or x == \"n\" or x == \"N\":\n",
    "\n",
    "            answer = True\n",
    "        \n",
    "        else:\n",
    "            \n",
    "            print(\"Please give a valid response.\\n\")\n",
    "\n",
    "            x = \"\"\n",
    "\n",
    "    \n",
    "    if x == \"Y\" or x == \"y\":\n",
    "\n",
    "        Value_To_Return = True\n",
    "    \n",
    "    else:\n",
    "\n",
    "        Value_To_Return = False\n",
    "\n",
    "    return Value_To_Return \n",
    "\n",
    "def Remaining_Alphabet(A_list, Bool_list, Show_List):\n",
    "\n",
    "    length = len(A_list)\n",
    "\n",
    "    for i in range(length):\n",
    "\n",
    "        if Bool_list[i] == True:\n",
    "\n",
    "            Show_List[i] = \"_\"\n",
    "\n",
    "        else:\n",
    "\n",
    "            Show_List[i] = A_list[i]\n",
    "\n",
    "    return Show_List\n",
    "\n",
    "\n",
    "#This will load in your prefered dictionary into the file\n",
    "\n",
    "def Word_Import(Path):\n",
    "\n",
    "\n",
    "    f = open(f\"{Path}\",\"r\")\n",
    "\n",
    "    Word_Dictionary = json.load(f)\n",
    "\n",
    "    f.close()\n",
    "\n",
    "    return Word_Dictionary\n",
    "\n",
    "# make sure to create a wins and losses file somewhere and use that as the path below\n",
    "\n",
    "def Record(Result):\n",
    "\n",
    "    Wins_Losses = [-1,-1]\n",
    "\n",
    "    f1 = open(r\"C:\\Users\\Nick\\Documents\\Gen10\\Visual-Studio\\Files\\english-words-master\\wins.txt\")\n",
    "    f2 = open(r\"C:\\Users\\Nick\\Documents\\Gen10\\Visual-Studio\\Files\\english-words-master\\losses.txt\")\n",
    "\n",
    "    wins = f1.read()\n",
    "\n",
    "    losses = f2.read()\n",
    "\n",
    "    Wins_Losses[0] = int(wins)\n",
    "\n",
    "    Wins_Losses[1] = int(losses)\n",
    "\n",
    "    f1.close()\n",
    "    f2.close()\n",
    "\n",
    "    #if win\n",
    "\n",
    "    if Result == False:\n",
    "\n",
    "        Wins_Losses[0]+=1\n",
    "\n",
    "        print(f\"You are victorious. Your record is now {Wins_Losses[0]} wins and {Wins_Losses[1]} losses\\n\\n\")\n",
    "\n",
    "        f1_2 = open(r\"C:\\Users\\Nick\\Documents\\Gen10\\Visual-Studio\\Files\\english-words-master\\wins.txt\", \"w\")\n",
    "\n",
    "        f1_2.write(f\"{Wins_Losses[0]}\")\n",
    "\n",
    "        f1_2.close()\n",
    "    \n",
    "    #if loss\n",
    "\n",
    "    else:\n",
    "\n",
    "        Wins_Losses[1]+=1\n",
    "\n",
    "        print(f\"You have failed. Your record is now {Wins_Losses[0]} wins and {Wins_Losses[1]} losses\\n\\n\")\n",
    "\n",
    "        f2_2 = open(r\"C:\\Users\\Nick\\Documents\\Gen10\\Visual-Studio\\Files\\english-words-master\\losses.txt\", \"w\")\n",
    "\n",
    "        f2_2.write(f\"{Wins_Losses[1]}\")\n",
    "\n",
    "        f2_2.close()\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "The_Dictionary = {}\n",
    "\n",
    "Alphabet_As_Set = {\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"j\",\"k\",\"l\",\"m\",\"n\",\"o\",\"p\",\"q\",\"r\",\"s\",\"t\",\"u\",\"v\",\"w\",\"x\",\"y\",\"z\"}\n",
    "\n",
    "Alphabet = [\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"j\",\"k\",\"l\",\"m\",\"n\",\"o\",\"p\",\"q\",\"r\",\"s\",\"t\",\"u\",\"v\",\"w\",\"x\",\"y\",\"z\"]\n",
    "#read only\n",
    "\n",
    "The_Dictionary = Word_Import(r\"C:\\Users\\Nick\\Documents\\Gen10\\Visual-Studio\\Files\\english-words-master\\words_dictionary.json\")\n",
    "\n",
    "game=True\n",
    "\n",
    "\"\"\"\n",
    "\n",
    "TO DO:\n",
    "\n",
    "Import Dictionary (x)\n",
    "\n",
    "Random Word (x)\n",
    "\n",
    "Record wins/losses ()\n",
    "\n",
    "ASCII? ()\n",
    "\n",
    "\"\"\"\n",
    "\n",
    "while game ==True:\n",
    "\n",
    "\n",
    "\n",
    "    ##Game reset stage: resets variables for new game\n",
    "\n",
    "\n",
    "\n",
    "    Word_As_List_Position_Check = []\n",
    "\n",
    "    Display_List = []\n",
    "\n",
    "    Alphabet_Position_Check = [False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False]\n",
    "\n",
    "    Play_Time = False\n",
    "\n",
    "    Fail_Count = 0\n",
    "\n",
    "    Rand_Word_True_Counter = 0\n",
    "\n",
    "    Rand_Word = random.choice(list(The_Dictionary.keys()))\n",
    "\n",
    "    The_Dictionary.pop(Rand_Word)\n",
    "\n",
    "    Word_As_List = Rand_Word_Into_List(Rand_Word)\n",
    "\n",
    "    Word_As_List_Position_Check = Fill_Position_Bool(Word_As_List,Word_As_List_Position_Check)\n",
    "\n",
    "    Display_List = Fill_Position_Bool(Word_As_List, Display_List)\n",
    "    # I just need to get this to the right size with something\n",
    "\n",
    "    Loss = False\n",
    "\n",
    "    Char_Subset={\"\"}\n",
    "\n",
    "    The_Guess_Memory = \"\"\n",
    "\n",
    "    ASCII_URDEAD = [p.figlet_format(\"U\",font=\"Doh\"),p.figlet_format(\"R\",font=\"Doh\"),p.figlet_format(\"D\",font=\"Doh\"),p.figlet_format(\"E\",font=\"Doh\"),p.figlet_format(\"A\",font=\"Doh\"),p.figlet_format(\"D\",font=\"Doh\")]\n",
    "\n",
    "    print(\"Welcome to the word guessing game!\\nThis program will select a random word and you will have to guess it.\\n\\nYou have six wrong attempts to select every letter or the whole word.\\n\")\n",
    "\n",
    "    while Play_Time == False:\n",
    "\n",
    "        Rand_Word_True_Counter = True_Counter_For_Letters(Word_As_List_Position_Check)\n",
    "        # we need to keep count of the amount of letters correctly guessed to compare with functions later in the program\n",
    "\n",
    "        The_Guess = input(\"Select a letter or word\\n\")\n",
    "\n",
    "        print(\"\")\n",
    "\n",
    "        The_Guess_Length = len(The_Guess)\n",
    "\n",
    "        The_Guess = The_Guess.lower()\n",
    "\n",
    "        ## checking phase\n",
    "\n",
    "\n",
    "\n",
    "        # word checking\n",
    "\n",
    "        if The_Guess_Length > 1:\n",
    "            \n",
    "            #The Play_Time True value will go to the win check section\n",
    "\n",
    "            Play_Time = Word_Check(Rand_Word, The_Guess)\n",
    "\n",
    "            if Play_Time == False:\n",
    "\n",
    "                Fail_Count+=1\n",
    "\n",
    "                print(\"You guessed the wrong word. Try again.\\n\")\n",
    "        \n",
    "        #letter checking, and I suppose if the player is stupid enough, \"\" checking as well\n",
    "\n",
    "        else:\n",
    "            \n",
    "            #in the alphabet check\n",
    "\n",
    "            Char_Subset.discard(The_Guess_Memory)\n",
    "\n",
    "            Char_Subset.add(The_Guess)\n",
    "\n",
    "            The_Guess_Memory = The_Guess\n",
    "\n",
    "            if Char_Subset.issubset(Alphabet_As_Set) == False:\n",
    "\n",
    "                print(\"Choose an English letter\\n\")\n",
    "\n",
    "                continue\n",
    "\n",
    "\n",
    "            #This is used to check if the letter has been guessed\n",
    "\n",
    "            Letter_Place_Check=-1\n",
    "\n",
    "            for i in range(26):\n",
    "\n",
    "                if The_Guess == Alphabet[i]:\n",
    "\n",
    "                    Letter_Place_Check = i\n",
    "\n",
    "                    break\n",
    "            \n",
    "            if Alphabet_Position_Check[Letter_Place_Check] == True:\n",
    "\n",
    "                print(\"This letter has already been guessed, please try again.\\n\")\n",
    "\n",
    "                continue\n",
    "\n",
    "            # update Alphabet, checking if the letter is in the word\n",
    "\n",
    "            else:\n",
    "\n",
    "                Alphabet_Position_Check[Letter_Place_Check] = True\n",
    "                \n",
    "                Temp_True_Counter = 0\n",
    "\n",
    "                # checking the guess and updating our verification list\n",
    "\n",
    "                Word_As_List_Position_Check = Letter_Check(Word_As_List,Word_As_List_Position_Check,The_Guess)\n",
    "\n",
    "                # now to compare the truth values from before and after, if they differ then no lives will be deducted\n",
    "\n",
    "                Temp_True_Counter = True_Counter_For_Letters(Word_As_List_Position_Check)\n",
    "\n",
    "                if Temp_True_Counter == Rand_Word_True_Counter:\n",
    "\n",
    "                    Fail_Count+=1\n",
    "\n",
    "                    print(f\"Unfortunately, this guess is incorrect.\\n\")\n",
    "\n",
    "                    for i in range(Fail_Count):\n",
    "                        \n",
    "                        print(ASCII_URDEAD[i])\n",
    "\n",
    "                        print(\"\\n\")\n",
    "\n",
    "                else:\n",
    "\n",
    "                    # I know this is being calculated twice in a loop but it'll do for now until polishing\n",
    "\n",
    "                    Rand_Word_True_Counter = Temp_True_Counter\n",
    "\n",
    "                    print(f'Congratulations, the letter {The_Guess} is in the word\\n')\n",
    "\n",
    "\n",
    "\n",
    "        ## win/lose check phase\n",
    "\n",
    "\n",
    "\n",
    "        if Rand_Word_True_Counter == len(Word_As_List):\n",
    "            \n",
    "            Play_Time=True\n",
    "\n",
    "\n",
    "        if Play_Time == True:\n",
    "\n",
    "            continue\n",
    "\n",
    "        if Fail_Count == 6:\n",
    "            \n",
    "            Loss=True\n",
    "\n",
    "            Play_Time=True\n",
    "\n",
    "            continue\n",
    "\n",
    "\n",
    "\n",
    "        ## display phase\n",
    "\n",
    "\n",
    "\n",
    "        Display_List= Guess_Display(Word_As_List, Word_As_List_Position_Check, Display_List)\n",
    "\n",
    "        print(f\"You have {6-Fail_Count} lives remaining.\\n\\nThis is how your word looks now.\\n\")\n",
    "\n",
    "        print(' , '.join([f'{char}' for char in Display_List]))\n",
    "\n",
    "        print(\"\\nThese are the letters available to guess\\n\")\n",
    "\n",
    "        Temp_List = [None] * 26\n",
    "\n",
    "        Temp_List = Remaining_Alphabet(Alphabet,Alphabet_Position_Check,Temp_List)\n",
    "\n",
    "        print(' , '.join(Temp_List))\n",
    "\n",
    "        print(\"\\n\")\n",
    "\n",
    "\n",
    "\n",
    "    ## end phase\n",
    "\n",
    "\n",
    "\n",
    "    Record(Loss)\n",
    "\n",
    "    if Loss == True:\n",
    "\n",
    "        print(\"YOU LOSE\\n\")\n",
    "\n",
    "        print(f\"\\\"{Rand_Word}\\\" was the word that you failed to guess\\n\")\n",
    "\n",
    "        game = Game_Restart()\n",
    "        \n",
    "\n",
    "    else:\n",
    "\n",
    "        print(f\"Congratulations, you correctly guessed the word \\\"{Rand_Word}\\\" correctly.\\n\")\n",
    "\n",
    "        game = Game_Restart()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ]
}